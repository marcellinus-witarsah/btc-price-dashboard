services:

  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: BROKER://broker:29092,CONTROLLER://broker:29093,HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: BROKER://broker:29092,HOST://localhost:9092 
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_NUM_PARTITIONS: 3

  timescaledb:
    image: timescale/timescaledb-ha:pg17
    container_name: timescaledb
    volumes:
      - timescaledbdata:/home/postgres/pgdata/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: timescaledbuser
      POSTGRES_PASSWORD: timescaledbpassword
      POSTGRES_DB: timescaledb
    extra_hosts:
      - "host.docker.internal:127.0.0.1" # it create a DNS to connect to the host machine
      - "host.docker.internal:host-gateway"

volumes:
  timescaledbdata: