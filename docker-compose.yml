services:

  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: BROKER://broker:29092,CONTROLLER://broker:29093,HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: BROKER://broker:29092,HOST://localhost:9092 
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_NUM_PARTITIONS: 3

  jobmanager:
    build:
      context: .
      dockerfile: ./Dockerfile.flink
      platforms:
        - "linux/amd64"
        - "linux/arm64"
    image: pyflink:1.16.0
    container_name: "flink-jobmanager"
    pull_policy: never
    platform: "linux/amd64"
    hostname: "jobmanager"
    expose:
      - "6123"
    ports:
      - "8081:8081"
    volumes:
      - ./:/opt/flink/usrlib
      - ./keys/:/var/private/ssl/
      - ./src/:/opt/src
    command: jobmanager 
    extra_hosts:
      - "host.docker.internal:127.0.0.1" #// Linux
      - "host.docker.internal:host-gateway" #// Access services on the host machine from within the Docker container
    environment:
      - POSTGRES_URL=${POSTGRES_URL:-jdbc:postgresql://host.docker.internal:5432/postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager        
  
  # Flink task manager
  taskmanager:
    image: pyflink:1.16.0
    container_name: "flink-taskmanager"
    pull_policy: never
    platform: "linux/amd64"
    expose:
      - "6121"
      - "6122"
    volumes:
      - ./:/opt/flink/usrlib
      - ./src/:/opt/src
    depends_on:
      - jobmanager
    command: taskmanager --taskmanager.registration.timeout 5 min
    extra_hosts:
      - "host.docker.internal:127.0.0.1" #// Linux
      - "host.docker.internal:host-gateway" #// Access services on the host machine from within the Docker container
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 15
        parallelism.default: 3
      
  # postgres:
  #   image: postgres:latest
  #   container_name: postgres
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_USER: postgresuser
  #     POSTGRES_PASSWORD: postgrespassword
  #     POSTGRES_DB: postgresdb
  #   extra_hosts:
  #     - "host.docker.internal:127.0.0.1" # it create a DNS to connect to the host machine
  #     - "host.docker.internal:host-gateway" 
  timescaledb:
    image: timescale/timescaledb-ha:pg17
    container_name: timescaledb
    volumes:
      - ./timescaledbdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: timescaledbuser
      POSTGRES_PASSWORD: timescaledbpassword
      POSTGRES_DB: timescaledb
    extra_hosts:
      - "host.docker.internal:127.0.0.1" # it create a DNS to connect to the host machine
      - "host.docker.internal:host-gateway"